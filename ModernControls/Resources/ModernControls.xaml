<ResourceDictionary xmlns="http://schemas.microsoft.com/winfx/2006/xaml/presentation"
                    xmlns:x="http://schemas.microsoft.com/winfx/2006/xaml"
                    xmlns:converters="clr-namespace:ModernControls.Converters"
                    xmlns:controls="clr-namespace:ModernControls.Controls">

    <BooleanToVisibilityConverter x:Key="Bool2VisibilityConverter" />
    <converters:MultipleBoolVis x:Key="MultiBoolVis" />
    <converters:BoolToVis x:Key="BoolToVis"/>
    <converters:HasFlag x:Key="HasFlag" />

    <Color x:Key="WindowBackgroundColor">White</Color>
    <Color x:Key="FocusColor">LightBlue</Color>
    <Color x:Key="AccentColor">DarkCyan</Color>
    <Color x:Key="ForegroundColor">Black</Color>
    <SolidColorBrush x:Key="WindowBackgroundColorBrush" Color="{StaticResource WindowBackgroundColor}"/>
    <SolidColorBrush x:Key="FocusColorBrush" Color="{StaticResource FocusColor}"/>
    <SolidColorBrush x:Key="AccentColorBrush" Color="{StaticResource AccentColor}"/>
    <SolidColorBrush x:Key="ForegroundColorBrush" Color="{StaticResource ForegroundColor}"/>
    <SolidColorBrush x:Key="ForegroundColorHighlightBrush" Color="Black"/>

    <Style x:Key="LightHeader">
        <Setter Property="TextOptions.TextFormattingMode" Value="Display" />
        <Setter Property="TextElement.FontFamily" Value="Segoe UI"/>
        <Setter Property="TextElement.FontSize" Value="30"/>
        <Setter Property="TextElement.FontWeight" Value="DemiBold"/>
        <Setter Property="TextElement.Foreground" Value="White"/>
    </Style>

    <Style x:Key="DarkHeader" BasedOn="{StaticResource LightHeader}">
        <Setter Property="TextElement.Foreground" Value="Black"/>
    </Style>

    <Style TargetType="{x:Type Button}" x:Key="ModernButton">
        <Setter Property="Foreground" Value="{DynamicResource ForegroundColorBrush}" />
        <Setter Property="BorderThickness" Value="0" />
        <Setter Property="Background" Value="Transparent" />
        <Setter Property="HorizontalContentAlignment" Value="Center" />
        <Setter Property="VerticalContentAlignment" Value="Center" />
        <Setter Property="Padding" Value="1" />
        <Setter Property="FocusVisualStyle" Value="{x:Null}" />
        <Setter Property="Template">
            <Setter.Value>
                <ControlTemplate TargetType="{x:Type Button}">
                    <Border BorderThickness="{TemplateBinding BorderThickness}" BorderBrush="{TemplateBinding BorderBrush}">
                        <Grid Background="{TemplateBinding Background}" TextElement.FontFamily="{TemplateBinding FontFamily}">
                            <ContentPresenter x:Name="contentPresenter" 
                                              TextElement.FontFamily="{TemplateBinding FontFamily}"
                                              TextElement.FontSize="{TemplateBinding FontSize}"
                                              TextElement.FontWeight ="{TemplateBinding FontWeight}"
                                              HorizontalAlignment="{TemplateBinding HorizontalContentAlignment}"
                                              VerticalAlignment="{TemplateBinding VerticalContentAlignment}" 
                                              SnapsToDevicePixels="{TemplateBinding SnapsToDevicePixels}"
                                              Margin="{TemplateBinding Padding}" 
                                              RecognizesAccessKey="True" />
                        </Grid>
                    </Border>
                    <ControlTemplate.Triggers>
                        <Trigger Property="IsMouseOver" Value="True">
                            <Setter Property="Background" Value="{DynamicResource FocusColorBrush}" />
                            <Setter Property="Foreground" Value="{DynamicResource ForegroundColorHighlightBrush}" />
                        </Trigger>
                        <Trigger Property="IsPressed" Value="True">
                            <Setter Property="Background" Value="{DynamicResource AccentColorBrush}" />
                        </Trigger>
                        <Trigger Property="IsEnabled" Value="False">
                            <Setter TargetName="contentPresenter" Property="Opacity" Value=".5" />
                        </Trigger>

                    </ControlTemplate.Triggers>
                </ControlTemplate>
            </Setter.Value>
        </Setter>
    </Style>

    <Style TargetType="{x:Type controls:ModernWindow}" x:Key="ModernWindowStyle">
        <Setter Property="Foreground" Value="{DynamicResource ForegroundColorBrush}" />
        <Setter Property="Background" Value="{DynamicResource WindowBackgroundBrush}"/>
        <Setter Property="OverridesDefaultStyle" Value="True" />
        <Setter Property="ResizeMode" Value="CanResizeWithGrip" />
        <Setter Property="UseLayoutRounding" Value="True" />
        <Setter Property="WindowStyle" Value="None" />
        <Setter Property="Template">
            <Setter.Value>
                <ControlTemplate TargetType="controls:ModernWindow">
                    <Border Margin="{Binding Source={x:Static SystemParameters.WindowNonClientFrameThickness}}" 
                            Background="{StaticResource WindowBackgroundColorBrush}">
                        <Grid>
                            <Border BorderThickness="1">
                                <AdornerDecorator>
                                    <Grid x:Name="LayoutRoot">
                                        <Grid.RowDefinitions>
                                            <RowDefinition Height="35" />
                                            <RowDefinition Height="Auto" />
                                            <RowDefinition Height="*" />
                                            <RowDefinition Height="15" />
                                        </Grid.RowDefinitions>

                                        <Rectangle Fill="{DynamicResource AccentColorBrush}" Grid.Row="0"
                                                   Visibility="{TemplateBinding ShowHeaderColors, Converter={StaticResource BoolToVis}}" />


                                        <StackPanel Grid.Row="0" Orientation="Horizontal" WindowChrome.IsHitTestVisibleInChrome="True" >

                                            <Image Source="{TemplateBinding Icon}" Width="35" Height="35" />

                                            <TextBlock Text="{TemplateBinding Title}" IsHitTestVisible="False"
                                                       HorizontalAlignment="Left" TextTrimming="CharacterEllipsis" VerticalAlignment="Center" 
                                                       Margin="8,-1,0,0" FontSize="20"  Foreground="{TemplateBinding Foreground}"/>
                                        </StackPanel>

                                        <StackPanel Orientation="Horizontal" HorizontalAlignment="Right" VerticalAlignment="Top" WindowChrome.IsHitTestVisibleInChrome="True" Grid.Row="0">
                                            <Button Style="{StaticResource ModernButton}" Command="{Binding Source={x:Static SystemCommands.MinimizeWindowCommand}}" ToolTip="Minimize" Visibility="{TemplateBinding WindowButton,Converter={StaticResource HasFlag}, ConverterParameter=minimize}">
                                                <Button.Content>
                                                    <Grid Width="25" Height="30" RenderTransform="1,0,0,1,0,1">
                                                        <Path Data="M0,10 L12,10 Z" VerticalAlignment="Center" HorizontalAlignment="Center"
                                                        Stroke="{Binding Foreground, RelativeSource={RelativeSource Mode=FindAncestor, AncestorType=Button}}" 
														StrokeThickness="2" Width="12" Height="12"  />
                                                    </Grid>
                                                </Button.Content>
                                            </Button>
                                            <Grid Margin="1,0,1,0">
                                                <Button Style="{StaticResource ModernButton}" x:Name="Restore" Command="{Binding Source={x:Static SystemCommands.RestoreWindowCommand}}" ToolTip="Restore Down" Visibility="Collapsed">
                                                    <Button.Content>
                                                        <Grid Width="25" Height="30" UseLayoutRounding="True" RenderTransform="1,0,0,1,.5,.5">
                                                            <Path Data="M0.5,0.5 L11.75,0.5 11.75,11" Opacity=".5" Width="12" Height="11" VerticalAlignment="Center" HorizontalAlignment="Center"
                                                        		Stroke="{Binding Foreground, RelativeSource={RelativeSource AncestorType={x:Type Button}, Mode=FindAncestor}}" StrokeThickness="1" Margin="8.25,7.5,4.75,11.5" Stretch="Fill" UseLayoutRounding="False"  />
                                                            <Path Data="M0.5,0.5 L11.75,0.5" Width="12.25" Height="1" VerticalAlignment="Center" HorizontalAlignment="Center"
                                                        		Stroke="{Binding Foreground, RelativeSource={RelativeSource AncestorType={x:Type Button}, Mode=FindAncestor}}" StrokeThickness="1" Margin="6.667,10.583,6.083,18.417" Stretch="Fill" UseLayoutRounding="False"  />
                                                            <Path Data="M0.5,0.5 L11.75,0.5 11.75,11 0.5,11 z" Width="12.25" Height="11.5" VerticalAlignment="Center" HorizontalAlignment="Center"
                                                        		Stroke="{Binding Foreground, RelativeSource={RelativeSource AncestorType={x:Type Button}, Mode=FindAncestor}}" StrokeThickness="1" Margin="6.667,8.833,6.083,9.667" Stretch="Fill" UseLayoutRounding="False"  />
                                                        </Grid>
                                                    </Button.Content>
                                                </Button>
                                                <Button Style="{StaticResource ModernButton}" x:Name="Maximize" Command="{Binding Source={x:Static SystemCommands.MaximizeWindowCommand}}" ToolTip="Maximize"  Visibility="{TemplateBinding WindowButton,Converter={StaticResource HasFlag}, ConverterParameter=Maximize}">
                                                    <Button.Content>
                                                        <Grid Width="26" Height="30">
                                                            <Path Data="M0,1 L14,1 L14,12 L0,12 Z" Width="14" Height="12" VerticalAlignment="Center" HorizontalAlignment="Center"
                                                            Stroke="{Binding Foreground, RelativeSource={RelativeSource Mode=FindAncestor, AncestorType=Button}}" StrokeThickness="2"  />
                                                        </Grid>
                                                    </Button.Content>
                                                </Button>
                                            </Grid>
                                            <Button Style="{StaticResource ModernButton}" Command="{Binding Source={x:Static SystemCommands.CloseWindowCommand}}" ToolTip="Close" Visibility="{TemplateBinding WindowButton,Converter={StaticResource HasFlag}, ConverterParameter=close}">
                                                <Button.Content>
                                                    <Grid Width="25" Height="30" RenderTransform="1,0,0,1,0,1">
                                                        <Path Data="M0,0 L12,12 M12,0 L0,12 Z" Width="12" Height="12" VerticalAlignment="Center" HorizontalAlignment="Center"
                                                        Stroke="{Binding Foreground, RelativeSource={RelativeSource Mode=FindAncestor, AncestorType=Button}}" StrokeThickness="1.5"  />
                                                    </Grid>
                                                </Button.Content>
                                            </Button>
                                        </StackPanel>

                                        <!--<StackPanel Grid.Row="1" Height="30" HorizontalAlignment="Left" Orientation="Horizontal" Margin="5,1" Visibility="{TemplateBinding ShowNavigation, Converter={StaticResource Bool2VisibilityConverter}}">
                                            <Image Source="{TemplateBinding Icon}" Height="25" Width="25" RenderOptions.BitmapScalingMode="HighQuality"/>
                                            <TextBlock Text="{TemplateBinding SubTitle}" FontSize="16" Margin="15,0,0,0"  Foreground="Black"/>
                                        </StackPanel>-->

                                        <ContentPresenter Grid.Row="2" Grid.RowSpan="2" Margin="2"/>

                                    </Grid>
                                </AdornerDecorator>
                            </Border>
                            <Border BorderBrush="{DynamicResource AccentColorBrush}" BorderThickness="1" Visibility="{Binding IsActive, RelativeSource={RelativeSource FindAncestor, AncestorType={x:Type Window}}, Converter={StaticResource Bool2VisibilityConverter}}" />
                        </Grid>
                    </Border>
                    <ControlTemplate.Triggers>
                        <Trigger Property="WindowState" Value="Maximized">
                            <Setter TargetName="Maximize" Property="Visibility" Value="Collapsed" />
                            <Setter TargetName="Restore" Property="Visibility" Value="Visible" />
                            <Setter TargetName="LayoutRoot" Property="Margin" Value="6" />
                        </Trigger>
                        <MultiTrigger>
                            <MultiTrigger.Conditions>
                                <Condition Property="WindowState" Value="Normal" />
                                <Condition Property="WindowButton" Value="Maximize" />
                            </MultiTrigger.Conditions>
                            <Setter TargetName="Maximize" Property="Visibility" Value="Visible" />
                            <Setter TargetName="Restore" Property="Visibility" Value="Collapsed" />
                        </MultiTrigger>
                        <MultiTrigger>
                            <MultiTrigger.Conditions>
                                <Condition Property="ResizeMode" Value="CanResizeWithGrip" />
                                <Condition Property="WindowState" Value="Normal" />
                            </MultiTrigger.Conditions>
                        </MultiTrigger>
                    </ControlTemplate.Triggers>
                </ControlTemplate>
            </Setter.Value>
        </Setter>
        <Setter Property="WindowChrome.WindowChrome">
            <Setter.Value>
                <WindowChrome ResizeBorderThickness="15"  />
            </Setter.Value>
        </Setter>
    </Style>

    <Style TargetType="{x:Type controls:HamburgerModernWindow}" BasedOn="{StaticResource ModernWindowStyle}" x:Key="HamburgerWindowStyle">
        <Setter Property="Template">
            <Setter.Value>
                <ControlTemplate TargetType="{x:Type controls:HamburgerModernWindow}" >
                    <Border
                        Margin="{Binding Source={x:Static SystemParameters.WindowNonClientFrameThickness}}" 
                        Background="{StaticResource WindowBackgroundColorBrush}">
                        <Grid>
                            <Border BorderThickness="1">
                                <AdornerDecorator>
                                    <Grid x:Name="LayoutRoot">
                                        <Grid.RowDefinitions>
                                            <RowDefinition Height="35" />
                                            <RowDefinition Height="Auto" />
                                            <RowDefinition Height="*" />
                                            <RowDefinition Height="15" />
                                        </Grid.RowDefinitions>

                                        <Rectangle Fill="{DynamicResource AccentColorBrush}" Grid.Row="0" Visibility="{TemplateBinding ShowHeaderColors, Converter={StaticResource BoolToVis}}" />
                                        <Rectangle Fill="{DynamicResource AccentColorBrush}" Grid.Row="1"  />

                                        <StackPanel Grid.Row="0" Orientation="Horizontal" WindowChrome.IsHitTestVisibleInChrome="True" >
                                            <Button Style="{StaticResource ModernButton}"
                                                    FontFamily="Segoe MDL2 Assets"
                                                    Content="&#xE700;" Width="50"
                                                    Foreground="Black" Panel.ZIndex="100" ToolTip="Menu" x:Name="menuButton" >

                                            </Button>
                                            <Image Source="{TemplateBinding Icon}" Width="35" Height="35" />
                                            <TextBlock Text="{TemplateBinding Title}" IsHitTestVisible="False"
                                                       HorizontalAlignment="Left" TextTrimming="CharacterEllipsis" VerticalAlignment="Center" 
                                                       Margin="8,-1,0,0" FontSize="20"  Foreground="{TemplateBinding Foreground}"/>
                                        </StackPanel>

                                        <StackPanel Orientation="Horizontal" HorizontalAlignment="Right" VerticalAlignment="Top" WindowChrome.IsHitTestVisibleInChrome="True" Grid.Row="0">
                                            <Button Style="{StaticResource ModernButton}" Command="{Binding Source={x:Static SystemCommands.MinimizeWindowCommand}}" ToolTip="Minimize" Visibility="{TemplateBinding WindowButton,Converter={StaticResource HasFlag}, ConverterParameter=minimize}">
                                                <Button.Content>
                                                    <Grid Width="25" Height="30" RenderTransform="1,0,0,1,0,1">
                                                        <Path Data="M0,10 L12,10 Z" VerticalAlignment="Center" HorizontalAlignment="Center"
                                                              Stroke="{Binding Foreground, RelativeSource={RelativeSource Mode=FindAncestor, AncestorType=Button}}" 
                                                              StrokeThickness="2" Width="12" Height="12"  />
                                                    </Grid>
                                                </Button.Content>
                                            </Button>
                                            <Grid Margin="1,0,1,0">
                                                <Button Style="{StaticResource ModernButton}" x:Name="Restore" Command="{Binding Source={x:Static SystemCommands.RestoreWindowCommand}}" ToolTip="Restore Down" Visibility="Collapsed">
                                                    <Button.Content>
                                                        <Grid Width="25" Height="30" UseLayoutRounding="True" RenderTransform="1,0,0,1,.5,.5">
                                                            <Path Data="M0.5,0.5 L11.75,0.5 11.75,11" Opacity=".5" Width="12" Height="11" VerticalAlignment="Center" HorizontalAlignment="Center"
                                                                  Stroke="{Binding Foreground, RelativeSource={RelativeSource AncestorType={x:Type Button}, Mode=FindAncestor}}" StrokeThickness="1" Margin="8.25,7.5,4.75,11.5" Stretch="Fill" UseLayoutRounding="False"  />
                                                            <Path Data="M0.5,0.5 L11.75,0.5" Width="12.25" Height="1" VerticalAlignment="Center" HorizontalAlignment="Center"
                                                                  Stroke="{Binding Foreground, RelativeSource={RelativeSource AncestorType={x:Type Button}, Mode=FindAncestor}}" StrokeThickness="1" Margin="6.667,10.583,6.083,18.417" Stretch="Fill" UseLayoutRounding="False"  />
                                                            <Path Data="M0.5,0.5 L11.75,0.5 11.75,11 0.5,11 z" Width="12.25" Height="11.5" VerticalAlignment="Center" HorizontalAlignment="Center"
                                                                  Stroke="{Binding Foreground, RelativeSource={RelativeSource AncestorType={x:Type Button}, Mode=FindAncestor}}" StrokeThickness="1" Margin="6.667,8.833,6.083,9.667" Stretch="Fill" UseLayoutRounding="False"  />
                                                        </Grid>
                                                    </Button.Content>
                                                </Button>
                                                <Button Style="{StaticResource ModernButton}" x:Name="Maximize" Command="{Binding Source={x:Static SystemCommands.MaximizeWindowCommand}}" ToolTip="Maximize"  Visibility="{TemplateBinding WindowButton,Converter={StaticResource HasFlag}, ConverterParameter=Maximize}">
                                                    <Button.Content>
                                                        <Grid Width="26" Height="30">
                                                            <Path Data="M0,1 L14,1 L14,12 L0,12 Z" Width="14" Height="12" VerticalAlignment="Center" HorizontalAlignment="Center"
                                                                  Stroke="{Binding Foreground, RelativeSource={RelativeSource Mode=FindAncestor, AncestorType=Button}}" StrokeThickness="2"  />
                                                        </Grid>
                                                    </Button.Content>
                                                </Button>
                                            </Grid>
                                            <Button Style="{StaticResource ModernButton}" Command="{Binding Source={x:Static SystemCommands.CloseWindowCommand}}" ToolTip="Close" Visibility="{TemplateBinding WindowButton,Converter={StaticResource HasFlag}, ConverterParameter=close}">
                                                <Button.Content>
                                                    <Grid Width="25" Height="30" RenderTransform="1,0,0,1,0,1">
                                                        <Path Data="M0,0 L12,12 M12,0 L0,12 Z" Width="12" Height="12" VerticalAlignment="Center" HorizontalAlignment="Center"
                                                              Stroke="{Binding Foreground, RelativeSource={RelativeSource Mode=FindAncestor, AncestorType=Button}}" StrokeThickness="1.5"  />
                                                    </Grid>
                                                </Button.Content>
                                            </Button>
                                        </StackPanel>

                                        <Grid Grid.Row="2" Grid.RowSpan="2" >
                                            <controls:SideMenu x:Name="Menu" Panel.ZIndex="100"/>
                                            <ContentPresenter x:Name="Presenter" Margin="2"/>
                                        </Grid>
                                    </Grid>
                                </AdornerDecorator>
                            </Border>
                            <Border BorderBrush="{DynamicResource AccentColorBrush}" BorderThickness="1" Visibility="{Binding IsActive, RelativeSource={RelativeSource FindAncestor, AncestorType={x:Type Window}}, Converter={StaticResource Bool2VisibilityConverter}}" />
                        </Grid>
                    </Border>
                    <ControlTemplate.Triggers>
                        <Trigger Property="WindowState" Value="Maximized">
                            <Setter TargetName="Maximize" Property="Visibility" Value="Collapsed" />
                            <Setter TargetName="Restore" Property="Visibility" Value="Visible" />
                            <Setter TargetName="LayoutRoot" Property="Margin" Value="6" />
                        </Trigger>
                        <MultiTrigger>
                            <MultiTrigger.Conditions>
                                <Condition Property="WindowState" Value="Normal" />
                                <Condition Property="WindowButton" Value="Maximize" />
                            </MultiTrigger.Conditions>
                            <Setter TargetName="Maximize" Property="Visibility" Value="Visible" />
                            <Setter TargetName="Restore" Property="Visibility" Value="Collapsed" />
                        </MultiTrigger>
                        <MultiTrigger>
                            <MultiTrigger.Conditions>
                                <Condition Property="ResizeMode" Value="CanResizeWithGrip" />
                                <Condition Property="WindowState" Value="Normal" />
                            </MultiTrigger.Conditions>
                        </MultiTrigger>
                    </ControlTemplate.Triggers>
                </ControlTemplate>
            </Setter.Value>
        </Setter>
    </Style>

    <Style TargetType="{x:Type controls:ModernToggleButton}" x:Key="ModernToggleButtonStyle">
        <Setter Property="Background" Value="Transparent" />
        <Setter Property="BorderThickness" Value="0" />
        <Setter Property="HorizontalContentAlignment" Value="Center" />
        <Setter Property="VerticalContentAlignment" Value="Center" />
        <Setter Property="Padding" Value="1" />
        <Setter Property="FocusVisualStyle" Value="{x:Null}" />
        <Setter Property="Template">
            <Setter.Value>
                <ControlTemplate TargetType="{x:Type controls:ModernToggleButton}">
                    <Border BorderThickness="{TemplateBinding BorderThickness}" 
                            Background="Transparent"
                            IsHitTestVisible="True"
                            BorderBrush="{TemplateBinding BorderBrush}" Padding="{TemplateBinding Padding}">
                        <BulletDecorator>
                            <BulletDecorator.Bullet>
                                <Grid Height="16" Width="16" Margin="0,10,0,0">
                                    <Border Background="Transparent" BorderBrush="{DynamicResource FocusColorBrush}" BorderThickness="2" CornerRadius="2" />
                                    <Border CornerRadius="0" Margin="4" Name="RadioMark" Background="{TemplateBinding SelectedBrush}" Visibility="Hidden" />
                                    <Border CornerRadius="0" Margin="4" Name="RadioMarkOff" Background="{TemplateBinding DeselectedBrush}" />
                                </Grid>
                            </BulletDecorator.Bullet>
                            <Grid VerticalAlignment="Center">
                                
                                <Grid.RowDefinitions>
                                    <RowDefinition />
                                    <RowDefinition />
                                </Grid.RowDefinitions>

                                <ContentPresenter Content="{TemplateBinding Content}" 
                                                  FocusVisualStyle="{x:Null}"
                                                  Margin="-10,0,0,0" 
                                                  TextElement.FontWeight="{TemplateBinding FontWeight}" 
                                                  Paragraph.TextAlignment="{TemplateBinding HorizontalContentAlignment}"/>

                                <TextBlock 
                                    Grid.Row="1" 
                                    Margin="10,16,0,0" 
                                    Foreground="{DynamicResource ForegroundColorBrush}"
                                    FontFamily="{TemplateBinding FontFamily}"
                                    FontSize="{TemplateBinding FontSize}" 
                                    HorizontalAlignment="Left"
                                    x:Name="SelectedText" 
                                    Text="{TemplateBinding SelectedString}"
                                    Visibility="Hidden">
                                </TextBlock>

                                <TextBlock 
                                    Grid.Row="1"
                                    Margin="10,16,0,0" 
                                    Foreground="{DynamicResource ForegroundColorBrush}"  
                                    FontFamily="{TemplateBinding FontFamily}"  
                                    FontSize="{TemplateBinding FontSize}" 
                                    HorizontalAlignment="Left"
                                    x:Name="DeselectedText" 
                                    Text="{TemplateBinding DeselectedString}"/>
                            </Grid>
                        </BulletDecorator>
                    </Border>
                    <ControlTemplate.Triggers>
                        <Trigger Property="IsChecked" Value="true">
                            <Setter TargetName="SelectedText" Property="Visibility" Value="Visible" />
                            <Setter TargetName="DeselectedText" Property="Visibility" Value="Hidden" />
                            <Setter TargetName="RadioMark" Property="Visibility" Value="Visible"/>
                            <Setter TargetName="RadioMarkOff" Property="Visibility" Value="Hidden"/>
                        </Trigger>
                    </ControlTemplate.Triggers>
                </ControlTemplate>
            </Setter.Value>
        </Setter>
    </Style>

    <Style TargetType="{x:Type controls:SideMenu}" x:Key="SideMenuStyle">
        <Setter Property="HorizontalAlignment" Value="Left" />
        <Setter Property="BorderThickness" Value="0,1,1,0"/>
        <Setter Property="BorderBrush" Value="Black"/>
        <Setter Property="Margin" Value="0,-5,0,1" />
        <Setter Property="ItemsPanel">
            <Setter.Value>
                <ItemsPanelTemplate>
                    <StackPanel />
                </ItemsPanelTemplate>
            </Setter.Value>
        </Setter>
        <Setter Property="Template">
            <Setter.Value>
                <ControlTemplate TargetType="{x:Type controls:SideMenu}">
                    <Border Background="{DynamicResource AccentColorBrush}"
                            BorderThickness="{TemplateBinding BorderThickness}" 
                            BorderBrush="{TemplateBinding BorderBrush}"
                            Margin="{TemplateBinding Margin}" 
                            HorizontalAlignment="{TemplateBinding Margin}"
                            Width="{TemplateBinding MenuSize}"
                            CornerRadius="{TemplateBinding CornerRadius}">
                        <Border.Effect>
                            <DropShadowEffect Opacity=".90" RenderingBias="Quality" ShadowDepth="5"/>
                        </Border.Effect>
                        <Border.Style>
                            <Style TargetType="{x:Type Border}">
                                <Style.Triggers>
                                    <Trigger Property="Visibility" Value="Visible">
                                        <Trigger.EnterActions>
                                            <BeginStoryboard>
                                                <Storyboard>
                                                    <DoubleAnimation Storyboard.TargetProperty="Opacity" Duration="0:0:.15" FillBehavior="Stop" From="0.0" To="1.0" />
                                                </Storyboard>
                                            </BeginStoryboard>
                                        </Trigger.EnterActions>
                                    </Trigger>
                                </Style.Triggers>
                            </Style>
                        </Border.Style>

                        <ScrollViewer VerticalScrollBarVisibility="Auto" Margin="4" x:Name="scroller">
                            <ItemsPresenter />
                        </ScrollViewer>

                    </Border>
                </ControlTemplate>
            </Setter.Value>
        </Setter>
    </Style>

    <Style TargetType="{x:Type controls:SideMenuItem}" x:Key="SideMenuItemStyle">
        <Setter Property="IsHitTestVisible" Value="True" />
        <Setter Property="Padding" Value="10" />
        <Setter Property="DataContext" Value="{RelativeSource Self}" />
        <Setter Property="Template">
            <Setter.Value>
                <ControlTemplate TargetType="{x:Type controls:SideMenuItem}">
                    <Border IsHitTestVisible="True" Padding="{TemplateBinding Padding}" Background="Transparent">
                        <Grid HorizontalAlignment="Left" >
                            <Grid.ColumnDefinitions>
                                <ColumnDefinition Width="30"/>
                                <ColumnDefinition Width="*" />
                            </Grid.ColumnDefinitions>

                            <Viewbox>
                                <ContentPresenter Content="{TemplateBinding Icon}" />
                            </Viewbox>

                            <Label Grid.Column="1"
                                   Margin="5,0,0,0" 
                                   VerticalAlignment="Center" 
                                   HorizontalAlignment="Center"
                                   FontSize="{TemplateBinding FontSize}"
                                   Style="{StaticResource LightHeader}"
                                   Content="{TemplateBinding Header}"
                                   Foreground="{TemplateBinding ItemColor}" />
                        </Grid>
                    </Border>
                </ControlTemplate>
            </Setter.Value>
        </Setter>
    </Style>

    <Style TargetType="{x:Type CheckBox}" x:Key="ModernCheckBox">
        <Setter Property="Foreground" Value="{DynamicResource {x:Static SystemColors.ControlTextBrushKey}}"/>
        <Setter Property="BorderThickness" Value="1"/>
        <Setter Property="Cursor" Value="Hand" />
        <Setter Property="Template">
            <Setter.Value>
                <ControlTemplate TargetType="{x:Type CheckBox}">
                    <ControlTemplate.Resources>
                        <Storyboard x:Key="StoryboardIsChecked">
                            <DoubleAnimationUsingKeyFrames Storyboard.TargetProperty="(UIElement.RenderTransform).(TransformGroup.Children)[0].(TranslateTransform.X)" Storyboard.TargetName="CheckFlag">
                                <EasingDoubleKeyFrame KeyTime="0" Value="0"/>
                                <EasingDoubleKeyFrame KeyTime="0:0:0.2" Value="14"/>
                            </DoubleAnimationUsingKeyFrames>
                        </Storyboard>
                        <Storyboard x:Key="StoryboardIsCheckedOff">
                            <DoubleAnimationUsingKeyFrames Storyboard.TargetProperty="(UIElement.RenderTransform).(TransformGroup.Children)[0].(TranslateTransform.X)" Storyboard.TargetName="CheckFlag">
                                <EasingDoubleKeyFrame KeyTime="0" Value="14"/>
                                <EasingDoubleKeyFrame KeyTime="0:0:0.2" Value="0"/>
                            </DoubleAnimationUsingKeyFrames>
                        </Storyboard>
                    </ControlTemplate.Resources>
                    <BulletDecorator Background="Transparent" SnapsToDevicePixels="true">
                        <BulletDecorator.Bullet>
                            <Border x:Name="ForegroundPanel" 
                                    BorderThickness="1" 
                                    Width="35"
                                    Height="12" 
                                    CornerRadius="1">
                                <Canvas>
                                    <Border Background="White" 
                                            x:Name="CheckFlag" 
                                            CornerRadius="{Binding ElementName=ForegroundPanel, Path=CornerRadius}"
                                            VerticalAlignment="Center"
                                            BorderThickness="1"
                                            Width="19"
                                            Height="10"
                                            RenderTransformOrigin="0.5,0.5">
                                        <Border.RenderTransform>
                                            <TransformGroup>
                                                <TranslateTransform/>
                                            </TransformGroup>
                                        </Border.RenderTransform>
                                        <Border.Effect>
                                            <DropShadowEffect 
                                                RenderingBias="Quality" 
                                                ShadowDepth="1"
                                                Direction="180" />
                                        </Border.Effect>
                                    </Border>
                                </Canvas>
                            </Border>
                        </BulletDecorator.Bullet>
                        <ContentPresenter 
                            x:Name="Content"
                            HorizontalAlignment="{TemplateBinding HorizontalContentAlignment}"
                            Margin="{TemplateBinding Padding}" 
                            RecognizesAccessKey="True" 
                            SnapsToDevicePixels="{TemplateBinding SnapsToDevicePixels}" 
                            VerticalAlignment="Center"/>
                    </BulletDecorator>
                    <ControlTemplate.Triggers>
                        <Trigger Property="HasContent" Value="True">
                            <Setter Property="Padding" Value="4,0,0,0"/>
                        </Trigger>

                        <Trigger Property="IsEnabled" Value="False">
                            <Setter Property="Foreground" Value="{DynamicResource {x:Static SystemColors.GrayTextBrushKey}}"/>
                        </Trigger>
                        <Trigger Property="IsChecked" Value="True">
                            <Setter TargetName="ForegroundPanel" Property="Background" Value="{DynamicResource AccentColorBrush}" />
                            <Trigger.EnterActions>
                                <BeginStoryboard x:Name="BeginStoryboardCheckedTrue" Storyboard="{StaticResource StoryboardIsChecked}" />
                                <RemoveStoryboard BeginStoryboardName="BeginStoryboardCheckedFalse" />
                            </Trigger.EnterActions>
                        </Trigger>
                        <Trigger Property="IsChecked" Value="False">
                            <Setter TargetName="ForegroundPanel" Property="Background" Value="LightGray" />
                            <Trigger.EnterActions>
                                <BeginStoryboard x:Name="BeginStoryboardCheckedFalse" Storyboard="{StaticResource StoryboardIsCheckedOff}" />
                                <RemoveStoryboard BeginStoryboardName="BeginStoryboardCheckedTrue" />
                            </Trigger.EnterActions>
                        </Trigger>
                    </ControlTemplate.Triggers>
                </ControlTemplate>
            </Setter.Value>
        </Setter>
    </Style>

    <Style TargetType="{x:Type controls:NumberBox}" x:Key="NumericBoxStyle">
        <Setter Property="Template">
            <Setter.Value>
                <ControlTemplate>
                    <Grid Background="Transparent">
                        <Grid.RowDefinitions>
                            <RowDefinition Height="*"/>
                            <RowDefinition Height="*"/>
                        </Grid.RowDefinitions>
                        <Grid.ColumnDefinitions>
                            <ColumnDefinition Width="*"/>
                            <ColumnDefinition Width="Auto"/>
                        </Grid.ColumnDefinitions>
                        <TextBox Grid.ColumnSpan="2" Grid.RowSpan="2"
                                 Text="{Binding Value, Mode=TwoWay, NotifyOnSourceUpdated=True, NotifyOnValidationError=True, RelativeSource={RelativeSource Mode=FindAncestor, AncestorType={x:Type controls:NumberBox}}}" />
                        <RepeatButton 
                            IsTabStop="False"
                            Name="PART_UpButton" BorderThickness="0" Grid.Column="1" Grid.Row="0" Width="13" Background="Transparent">
                            <Path Fill="Black" Data="M 0 3 L 6 3 L 3 0 Z"/>
                        </RepeatButton>
                        <RepeatButton 
                            IsTabStop="False"
                            Name="PART_DownButton" BorderThickness="0" Grid.Column="1" Grid.Row="1" 
                                      Width="13" Background="Transparent">
                            <Path Fill="Black" Data="M 0 0 L 3 3 L 6 0 Z"/>
                        </RepeatButton>
                    </Grid>
                </ControlTemplate>
            </Setter.Value>
        </Setter>
    </Style>

</ResourceDictionary>

